curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
P <- aggregate(prev$NVehs, by = list(prev$Sem), max)
prev <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_no_th_tracesMatch_toplot.csv")
P <- aggregate(prev$NVehs, by = list(prev$Sem), max)
LS <- P[P$Group.1 > 0, 1]
prev <- prev[prev$Sem %in% LS, ]
curr <- curr[curr$Sem %in% LS, ]
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(prev$NVehs)) + geom_line() + guides(color=FALSE)
library(ggplot2)
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(prev$NVehs)) + geom_line() + guides(color=FALSE)
curr
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
curr
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
library(ggplot2)
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
prev <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_no_th_tracesMatch_toplot.csv")
ggplot(prev, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(prev$NVehs)) + geom_line() + guides(color=FALSE)
prev <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_no_th_tracesMatch_toplot.csv")
ggplot(prev, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(prev$NVehs)) + geom_line() + guides(color=FALSE)
prev <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_no_th_tracesMatch_toplot.csv")
ggplot(prev, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(prev$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
curr <- read.csv("/home/giacomo/Scaricati/TAVF-Hamburg/osmosis_csv/TAVF_H_yes_th_tracesMatch_toplot.csv")
ggplot(curr, aes(x = SimTime, y = NVehs, color = Sem)) + ylim(0, max(curr$NVehs)) + geom_line() + guides(color=FALSE)
library(sqldf)
app <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/overallAppResults.csv")
app <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/overallAppResults.csv")
iot <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/appList.csv")
View(app)
View(iot)
View(app)
x = sqldf("
SELECT *
FROM app, iot
WHERE app.App_Name = iot.appName
")
x
View(x)
x = sqldf("
SELECT EndTime as time, IoTDeviceName as iot, ioTDeviceBatteryConsumption as battery
FROM app, iot
WHERE app.App_Name = iot.appName
ORDER BY iot, time battery
")
x = sqldf("
SELECT EndTime as time, IoTDeviceName as iot, ioTDeviceBatteryConsumption as battery
FROM app, iot
WHERE app.App_Name = iot.appName
ORDER BY iot, time, battery
")
x = sqldf("
SELECT app.EndTime as time, IoTDeviceName as iot, ioTDeviceBatteryConsumption as battery
FROM app, iot
WHERE app.App_Name = iot.appName
ORDER BY iot, time, battery
")
x = sqldf("
SELECT app.EndTime as time, IoTDeviceName as iot, app.ioTDeviceBatteryConsumption as battery
FROM app, iot
WHERE app.App_Name = iot.appName
ORDER BY iot, time, battery
")
x
x$iot <- as.character(x$iot)
ggplot(data = datos, aes(x = time, y=battery, color=iot)) +
geom_line()
library(ggplot2)
ggplot(data = datos, aes(x = time, y=battery, color=iot)) +
geom_line()
ggplot(data = sqldf("
SELECT app.EndTime as time, IoTDeviceName as iot, app.ioTDeviceBatteryConsumption as battery
FROM app, iot
WHERE app.App_Name = iot.appName
ORDER BY iot, time, battery
"), aes(x = time, y=battery, color=iot)) +
geom_line()
x$iot <- as.character(x$iot)
as.character(x$iot)
d = sqldf("
SELECT app.EndTime as time, IoTDeviceName as iot, app.ioTDeviceBatteryConsumption as battery
FROM app, iot
WHERE app.App_Name = iot.appName
ORDER BY iot, time, battery
")
d$iot <- as.character(d$iot)
ggplot(data = d, aes(x = time, y=battery, color=iot)) +
geom_line()
app <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/overallAppResults.csv")
iot <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/appList.csv")
d = sqldf("
SELECT app.EndTime as time, IoTDeviceName as iot, app.ioTDeviceBatteryConsumption as battery
FROM app, iot
WHERE app.App_Name = iot.appName
ORDER BY iot, time, battery
")
d$iot <- as.character(d$iot)
ggplot(data = d, aes(x = time, y=battery, color=iot)) +
geom_line()
app <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/overallAppResults.csv")
iot <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/appList.csv")
d = sqldf("
SELECT app.startTime+app.appTotalRunningTime as time, IoTDeviceName as iot, app.ioTDeviceBatteryConsumption as battery
FROM app, iot
WHERE app.App_Name = iot.appName
ORDER BY iot, time, battery
")
d$iot <- as.character(d$iot)
ggplot(data = d, aes(x = time, y=battery, color=iot)) +
geom_line()
app <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/overallAppResults.csv")
iot <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/appList.csv")
d = sqldf("
SELECT app.startTime+app.appTotalRunningTime as time, IoTDeviceName as iot, app.ioTDeviceBatteryConsumption as battery
FROM app, iot
WHERE app.App_Name = iot.appName and IoTDeviceName < 5
ORDER BY iot, time, battery
")
d$iot <- as.character(d$iot)
ggplot(data = d, aes(x = time, y=battery, color=iot)) +
geom_line()
app <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/overallAppResults.csv")
iot <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/appList.csv")
d = sqldf("
SELECT app.startTime+app.appTotalRunningTime as time, IoTDeviceName as iot, app.ioTDeviceBatteryConsumption as battery
FROM app, iot
WHERE app.App_Name = iot.appName and IoTDeviceName < 3
ORDER BY iot, time, battery
")
d$iot <- as.character(d$iot)
ggplot(data = d, aes(x = time, y=battery, color=iot)) +
geom_line()
d = sqldf("
SELECT app.startTime+app.appTotalRunningTime as time, IoTDeviceName as iot, app.ioTDeviceBatteryConsumption as battery
FROM app, iot
WHERE app.App_Name = iot.appName and IoTDeviceName < 1
ORDER BY iot, time, battery
")
d$iot <- as.character(d$iot)
ggplot(data = d, aes(x = time, y=battery, color=iot)) +
geom_line()
x <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
x <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
x <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
ggplot(data = x, aes(x = time, y=battery, color=ioTDeviceName)) +
geom_line()
x <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
ggplot(data = x, aes(x = time, y=capacity, color=ioTDeviceName)) +
geom_line()
x <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
x$ioTDeviceName <- as.character(x$ioTDeviceName)
ggplot(data = d, aes(x = time, y=battery, color=ioTDeviceName)) +
geom_line()
names(x)
x$ioTDeviceName <- as.character(x$ioTDeviceName)
x <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
x$ioTDeviceName <- as.character(x$ioTDeviceName)
ggplot(data = d, aes(x = time, y=battery, color=ioTDeviceName)) +
geom_line()
x <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
x$IoTDeviceName <- as.character(x$IoTDeviceName)
ggplot(data = d, aes(x = time, y=battery, color=IoTDeviceName)) +
geom_line()
x <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
x$IoTDeviceName <- as.character(x$IoTDeviceName)
ggplot(data = d, aes(x = time, y=battery, color=IoTDeviceName)) +
geom_line()
x$ioTDeviceName <- as.character(x$ioTDeviceName)
ggplot(data = x, aes(x = time, y=battery, color=ioTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- as.character(d$ioTDeviceName)
ggplot(data = d, aes(x = time, y=battery, color=ioTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- as.character(d$ioTDeviceName)
ggplot(data = d, aes(x = time, y=battery, color=ioTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- as.character(d$ioTDeviceName)
ggplot(data = d, aes(x = time, y=capacity, color=ioTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- as.character(d$ioTDeviceName)
ggplot(data = d, aes(x = time, y=capacity, color=ioTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- as.character(d$ioTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=ioTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- as.character(d$ioTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=ioTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- as.character(d$ioTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=ioTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d <- sqldf("select * from d where ioTDeviceName = 0")
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d <- sqldf("select * from d where IoTDeviceName = 0")
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
dat$IoTDeviceName <- NULL
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
dat$ioTDeviceName <- NULL
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- NULL
d <- sqldf("select * from d where IoTDeviceName = 0")
d$IoTDeviceName <- as.character(d$IoTDeviceName)
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- NULL
d <- sqldf("select * from d where IoTDeviceName = 0")
d$IoTDeviceName <- as.character(d$IoTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=IoTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- NULL
d <- sqldf("select * from d where IoTDeviceName = 0")
d$IoTDeviceName <- as.character(d$IoTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=IoTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- NULL
d$IoTDeviceName <- as.character(d$IoTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=IoTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- NULL
d$IoTDeviceName <- as.character(d$IoTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=IoTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- NULL
d <- sqldf("select * from d where IoTDeviceName = 0")
d$IoTDeviceName <- as.character(d$IoTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=IoTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- NULL
#d <- sqldf("select * from d where IoTDeviceName = 0")
d$IoTDeviceName <- as.character(d$IoTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=IoTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- NULL
#d <- sqldf("select * from d where IoTDeviceName = 0")
d$IoTDeviceName <- as.character(d$IoTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=IoTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- NULL
#d <- sqldf("select * from d where IoTDeviceName = 0")
d$IoTDeviceName <- as.character(d$IoTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=IoTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- NULL
d <- sqldf("select * from d where IoTDeviceName < 10")
d$IoTDeviceName <- as.character(d$IoTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=IoTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- NULL
d <- sqldf("select * from d where IoTDeviceName < 2")
d$IoTDeviceName <- as.character(d$IoTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=IoTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- NULL
d <- sqldf("select * from d where IoTDeviceName < 2")
d$IoTDeviceName <- as.character(d$IoTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=IoTDeviceName)) +geom_line()
d <- read.csv("/home/giacomo/IdeaProjects/SimulatorBridger/clean_example/3_extIOTSim_output/accurateBatteryInfo.csv")
d$ioTDeviceName <- NULL
d$IoTDeviceName <- as.character(d$IoTDeviceName)
ggplot(data = d, aes(x = time, y=consumption, color=IoTDeviceName)) +geom_line()
df <- read.csv(file = '/home/giacomo/projects/knobab/data/testing/results/benchmarking/custom_operators2.csv')
df <- aggregate(list(Time = df$Time),
by=list(Test = df$Test,Type=df$Type,Log_Size=df$Log_Size,Max_Trace_Length=df$Max_Trace_Length,Alphabet=df$Alphabet),data=df,FUN=mean)
df$Log_Size <- as.character(df$Log_Size)
labels = c("TIMED AND FUTURE", "TIMED AND GLOBALLY", "UNTIL")
names(labels) <- c("And_Future", "And_Globally", "Untimed Until")
ggplot(df, aes(x=Max_Trace_Length, y=Time, shape=Type, color=Log_Size)) +
geom_line() +
geom_point(size=3) +
labs(x = "Log Size", y = "Time (ms)") +
facet_wrap( ~ Test, nrow=2, ncol=2, labeller = labeller(Test = labels)) +
theme(legend.position="bottom") +
scale_color_discrete(name = TeX(r'($\epsilon$)')) +
scale_shape_discrete(labels=c( TeX(r'($VARIANT-2$)'), TeX(r'($VARIANT-1$)')), name = TeX(r'($Algorithm$)')) +
scale_x_log10(
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
guides(colour = guide_legend(order = 1), shape = guide_legend(order = 2))
library(ggplot2)
library(reshape2)
library(reshape)
library(dplyr)
library(tidyr)
library(scales)
library(latex2exp)
ggplot(df, aes(x=Max_Trace_Length, y=Time, shape=Type, color=Log_Size)) +
geom_line() +
geom_point(size=3) +
labs(x = "Log Size", y = "Time (ms)") +
facet_wrap( ~ Test, nrow=2, ncol=2, labeller = labeller(Test = labels)) +
theme(legend.position="bottom") +
scale_color_discrete(name = TeX(r'($\epsilon$)')) +
scale_shape_discrete(labels=c( TeX(r'($VARIANT-2$)'), TeX(r'($VARIANT-1$)')), name = TeX(r'($Algorithm$)')) +
scale_x_log10(
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
guides(colour = guide_legend(order = 1), shape = guide_legend(order = 2))
ggplot(df, aes(x=Max_Trace_Length, y=Time, shape=Type, color=Log_Size)) +
geom_line() +
geom_point(size=3) +
labs(x = "Log Size", y = "Time (ms)") +
theme(legend.position="bottom") +
scale_color_discrete(name = TeX(r'($\epsilon$)')) +
scale_shape_discrete(labels=c( TeX(r'($VARIANT-2$)'), TeX(r'($VARIANT-1$)')), name = TeX(r'($Algorithm$)')) +
scale_x_log10(
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
guides(colour = guide_legend(order = 1), shape = guide_legend(order = 2))
df
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
df <- read.csv(file = '/home/giacomo/projects/knobab/data/testing/results/benchmarking/custom_operators2.csv')
df <- aggregate(list(Time = df$Time),
by=list(Test = df$Test,Type=df$Type,Log_Size=df$Log_Size,Max_Trace_Length=df$Max_Trace_Length,Alphabet=df$Alphabet),data=df,FUN=mean)
print_chart <- function(df, labels, type.labs){
# test.labs <- c(TeX(r'(x)'), TeX(r'(x)'), TeX(r'(x)'))
test = c("hello", "there", "i", "am", "sam")
test1 = lapply(test, TeX)
# test2 = lapply(test, TeX)
alpha <- 1:5
another =  sprintf('($hi %d$)', alpha)
another1 = lapply(sprintf(r'($\alpha = %d$)', alpha), TeX)
another2 = unlist(another1)
names(another2) <- c("A&F(B)", "A&G(B)", "AUB")
ggplot(df, aes(x=Log_Size, y=Time, shape=Type, color=Max_Trace_Length)) +
geom_line() +
geom_point(size=3) +
labs(x = "Log Size", y = "Time (ms)") +
facet_wrap( ~ Test, nrow=2, ncol=2, labeller = labeller(Test = labels)) +
theme(legend.position="bottom") +
scale_color_discrete(name = TeX(r'($Max Trace Length$)')) +
scale_shape_discrete(labels=type.labs, name = TeX(r'($Algorithm$)')) +
scale_x_log10(
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))) +
guides(colour = guide_legend(order = 1), shape = guide_legend(order = 2))
}
df$Max_Trace_Length <- as.character(df$Max_Trace_Length)
labels = c("TIMED AND FUTURE", "TIMED AND GLOBALLY", "UNTIL")
names(labels) <- c("And_Future", "And_Globally", "Untimed Until")
print_chart(df[ df$Test == "And_Globally" ,], labels, c(TeX(r'($VARIANT-2$)'), TeX(r'($VARIANT-1$)'), TeX(r'($LOGICAL$)')))
print_chart(df[df$Test == "Until"  ,], labels, c( TeX(r'($VARIANT-2$)'), TeX(r'($VARIANT-1$)')))
