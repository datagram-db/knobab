"marking" {
     template "Init"               := INIT
     template "Exists1"            := (EXISTS 1)
     template "Absence1"           := ABSENCE 1
     template "Absence2"           := ABSENCE 2
     template "Choice" args 2      := (EXISTS 1 t #1 activation) OR THETA (EXISTS 1 t #2 target)
     template "Response" args 2    := G ( ((EXISTS ~ 1 t #1)) OR t ((EXISTS 1 t #1 activation) &Ft THETA (EXISTS 1 t #2 target)) )
     template "ChainResponse" args 2 := G ( ((EXISTS ~ 1 t #1)) OR t ((EXISTS 1 t #1 activation) AND t THETA (NEXT EXISTS 1 t #2 target)))
     template "RespExistence" args 2 := ( ((ABSENCE 1 #1)) OR ((EXISTS 1 #1 activation) AND THETA (EXISTS 1 #2 target)))
     template "ExlChoice" args 2 := ((EXISTS 1 t #1 activation) OR THETA (EXISTS 1 t #2 target)) AND ((ABSENCE 1 #1) OR (ABSENCE 1 #2))
     template "CoExistence" args 2 := ( ((ABSENCE 1 #1)) OR ((EXISTS 1 #1 activation) AND THETA (EXISTS 1 #2 target))) AND ( ((ABSENCE 1 #2)) OR ((EXISTS 1 #2 target) AND THETA (EXISTS 1 #1 activation)))
     template "NotCoExistence" args 2 := ~ ((EXISTS 1 t #1 activation) AND THETA (EXISTS 1 t #2 target)) PRESERVE
     template "Precedence" args 2 := ((EXISTS  ~ 1 t #2) U (EXISTS 1 t #1 target)) OR (ABSENCE 1 #2)
     template "Succession" args 2 := (G ( ((EXISTS ~ 1 t #1)) OR t ((EXISTS 1 t #1 activation) &Ft THETA (EXISTS 1 t #2 target)) )) AND (((EXISTS  ~ 1 t #2) U (EXISTS 1 t #1 target)) OR (ABSENCE 1 #2))
     template "NegSuccession" args 2 := (G ( ((EXISTS ~ 1 t #1)) OR t ((EXISTS 1 t #1 activation) &Gt THETA (EXISTS ~ 1 t #2)) ))
}